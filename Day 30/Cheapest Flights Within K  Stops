
class Solution {
    public int findCheapestPrice(int n, int[][] flights, int src, int dst, int k) {
        List<List<int[]>> list=new ArrayList<>();
        for(int i=0;i<n;i++){
            list.add(new ArrayList<>());
        }
        for(int[] flight:flights){
            int from=flight[0],to=flight[1],price=flight[2];
            list.get(from).add(new int[]{to,price});
        }

        PriorityQueue<int[]> pq = new PriorityQueue<>(Comparator.comparingInt(a -> a[0]));

        pq.offer(new int[]{0,src,0});

        while(!pq.isEmpty()){
            int[] curr=pq.poll();
            int cost=curr[0],city=curr[1],stops=curr[2];

            if(city==dst)  return cost;

            if(stops>k)  continue;


            for(int[] i:list.get(city)){
                int next=i[0],price=i[1];
                pq.offer(new int[]{cost+price,next,stops+1});
            }
        }
        return -1;
    }
}
