class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        if(obstacleGrid[obstacleGrid.length-1][obstacleGrid[0].length-1]==1){
            return 0;
        }
        return dfs(obstacleGrid,0,0); 
    }
    public int  dfs(int[][] obstacleGrid,int i,int j){
        if(i==obstacleGrid.length-1&&j==obstacleGrid[0].length-1){
            return 1;
        }
        if(i<0||j<0||i>=obstacleGrid.length||j>=obstacleGrid[0].length||obstacleGrid[i][j]==1){
            return 0;
        }

        int down=dfs(obstacleGrid,i+1,j);
        int right=dfs(obstacleGrid,i,j+1);

        return down+right;
    }
}
