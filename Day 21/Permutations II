class Solution {
    public List<List<Integer>> permuteUnique(int[] nums) {
        Arrays.sort(nums);
        boolean[] b1=new boolean[nums.length];
        List<List<Integer>> ans=new ArrayList<>();
        List<Integer> res=new ArrayList<>();
        getPermute(ans,res,nums,b1);

        return ans;
    }
    public void getPermute(List<List<Integer>> ans,List<Integer> res,int[] nums,boolean[] b1){
        if(res.size()==nums.length){
            
            ans.add(new ArrayList<>(res));
            
            return;
        }
        for(int i=0;i<nums.length;i++){
            if (b1[i]) continue;
            if (i > 0 && nums[i] == nums[i - 1] && !b1[i - 1]) continue;
            b1[i]=true;
            res.add(nums[i]);
            getPermute(ans,res,nums,b1);
            b1[i]=false;
            res.remove(res.size()-1);
        }
    }
    
}
